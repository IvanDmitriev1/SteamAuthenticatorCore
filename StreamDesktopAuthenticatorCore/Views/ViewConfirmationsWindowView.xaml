<Window x:Class="SteamDesktopAuthenticatorCore.Views.ViewConfirmationsWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:custom="clr-namespace:WpfHelper.Custom;assembly=WpfHelper"
        xmlns:viewModels="clr-namespace:SteamDesktopAuthenticatorCore.ViewModels"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        IsVisibleChanged="ViewConfirmationsWindowView_OnIsVisibleChanged"
        Title="ViewConfirmationsWindowView" Height="450" Width="300" >

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:CallMethodAction TargetObject="{Binding ElementName=CloseMinimizeButtons}" MethodName="OnWindowLoaded" />
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Window.DataContext>
        <viewModels:ViewConfirmationsWindowViewModel/>
    </Window.DataContext>

    <Border Background="{StaticResource BackgroundColour}"
            CornerRadius="10"
            Padding="10" >

        <Grid>
            <custom:CustomWindowStyle Height="20"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Right"
                                      MinimizeButtonVisibility="Hidden"
                                      CloseButtonShouldDo="Hide"
                                      x:Name="CloseMinimizeButtons" />

            <Grid Margin="0 30 0 0">

                <Grid.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="2,0,0,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>

                <Button Content="Update"
                        FontSize="14"
                        Height="35"
                        VerticalAlignment="Top"
                        Command="{Binding Path=UpdateCommand}"
                        CommandParameter="{Binding Path=SelectedAccount}" />

                <ListBox Margin="0 50 0 0"
                         ItemsSource="{Binding Path=Confirmations}"
                         HorizontalContentAlignment="Stretch"
                         SelectionChanged="Selector_OnSelectionChanged"
                         
                         VirtualizingPanel.IsVirtualizing="True"
                         VirtualizingPanel.IsContainerVirtualizable="True"
                         VirtualizingPanel.VirtualizationMode="Recycling" >

                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                </ListBox>

            </Grid>

        </Grid>

    </Border>
</Window>
